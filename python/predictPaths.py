# -*- coding: utf-8 -*-
"""
Created on Tue Nov 13 09:35:18 2018

@author: Stephen Downhower
"""

# Constants
filename = 'compData.pkl'
dataPath = '/Users/namisumida/Documents/repos/LoL_junglepaths/Data/'
endTime = 6

# Import Statements
import pandas as pd
import numpy as np

# Obtains the dataframe generated by the comparePaths.py script
compData = pd.read_pickle(dataPath + filename)

def definePath(coordinates):
    # Constructs a reference path from the given list of coordinates, and
    #   creates the contour map pertaining to the next predicted locaiton
    #
    # Example Inputs: definePath([[4000,6000]]); definePath([[4000,7000],[7500,4000]])

    # Initial Set Up
    compData = pd.read_pickle(dataPath + filename) # Reads in the data frame
    startMin = 2 # Assumes first position given is at the two minute position
    threshold = 750 # Can be adjusted; Thresholding will be removed soon
    endMin = len(coordinates) + startMin

    # Creates posData and adds minute position columns
    posData = compData[['matchId','pos']]

    for i in range(startMin, endMin + 1):
        posData['position'+str(i)] = list((j)[i - 1] for j in posData['pos'])

    # Compares the given coordinates to the positions of the queried paths and
    #   calculates the distance at each minute in a column
    for i in range(startMin, endMin):
        col = 'distance' + str(i)
        posData[col] = ''
        refPoint = np.array(coordinates[i-startMin])

        for j in range(0, len(posData)):
            testPoint = posData.iloc[j][i]
            posData.iat[j,posData.columns.get_loc(col)] = np.linalg.norm(refPoint-testPoint)

        posData = posData[posData[col] <= threshold]

    # Creates x and y position columns for the final predicted position column
    #   to prepare for contour plot creation
    posData['x_position' + str(endMin)] = list((j)[0] for j in posData['position'+str(endMin)])
    posData['y_position' + str(endMin)] = list((j)[1] for j in posData['position'+str(endMin)])

    posData.to_csv('../Data/exampleOutput.csv')
